package validation.rules

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.Period;
import com.paloit.drools.model.Customer;
import com.paloit.drools.model.Proposal;
import com.paloit.drools.model.Identity;
import com.paloit.drools.model.fact.ProposalCheckResult;

rule "Valid CPF Document Length"
when
    $proposal: Proposal($customer: customer != null)
    $identity: Identity(documentType == "CPF", documentNumber.length() != 11) from $customer.getIdentity()
    $result: ProposalCheckResult()
then
    $result.setValidDocumentNumber(false);
end

rule "Age Limit for Proposal with Customer as inner object"
when
    $proposal: Proposal($customer: customer != null)
    eval(calculateAge($customer.getBirthDate()) < 18 || calculateAge($customer.getBirthDate()) > 65)
    $result: ProposalCheckResult()
then
    $result.setValidAgeRange(false);
end

rule "Valid Email Format"
when
    $customer: Customer(contact != null)
    eval(!$customer.getContact().getEmail().matches("(?i)^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Z]{2,4}$"))
    $result: ProposalCheckResult()
then
    $result.setValidEmailFormat(false);
end

rule "Product Code Constraint"
when
    $proposal: Proposal(productCode == "002", proposalType != "PROPOSAL_CARREFOUR")
    $result: ProposalCheckResult()
then
    $result.setValidProductCode(false);
end

rule "Proposal Date Range"
when
    $proposal: Proposal(startsAtDate != null, endsAtDate != null)
    eval(LocalDate.parse($proposal.getStartsAtDate(), DateTimeFormatter.ofPattern("yyyyMMdd")).isAfter(LocalDate.parse($proposal.getEndsAtDate(), DateTimeFormatter.ofPattern("yyyyMMdd"))))
    $result: ProposalCheckResult()
then
    // You may want to add another attribute to ProposalCheckResult for this or use validProposal directly.
    $result.setValidProposal(false);
end

rule "Commission Percentage Range"
when
    $proposal: Proposal($commission: commission != null)
    eval($commission.getPercentage() < 1 || $commission.getPercentage() > 100)
    $result: ProposalCheckResult()
then
    // Similarly, you may want to add a specific attribute to ProposalCheckResult for commission validation.
    $result.setValidProposal(false);
end

rule "Overall Proposal Validation"
when
    $result : ProposalCheckResult(validProductCode == true, validEmailFormat == true, validDocumentNumber == true, validAgeRange == true) // Add other conditions as necessary
then
    $result.setValidProposal(true);
end

// Helper function to calculate age based on the birthdate
function int calculateAge(String birthDateString) {
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd");
    LocalDate birthDate = LocalDate.parse(birthDateString, formatter);
    return Period.between(birthDate, LocalDate.now()).getYears();
}
